{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/approach",
      "regex": "^/approach(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/approach(?:/)?$"
    },
    {
      "page": "/case-studies",
      "regex": "^/case\\-studies(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/case\\-studies(?:/)?$"
    },
    {
      "page": "/case-studies/executive-dashboards-scale",
      "regex": "^/case\\-studies/executive\\-dashboards\\-scale(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/case\\-studies/executive\\-dashboards\\-scale(?:/)?$"
    },
    {
      "page": "/case-studies/grp",
      "regex": "^/case\\-studies/grp(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/case\\-studies/grp(?:/)?$"
    },
    {
      "page": "/case-studies/manufacturing-analytics-roi",
      "regex": "^/case\\-studies/manufacturing\\-analytics\\-roi(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/case\\-studies/manufacturing\\-analytics\\-roi(?:/)?$"
    },
    {
      "page": "/case-studies/microservices-reporting-platform",
      "regex": "^/case\\-studies/microservices\\-reporting\\-platform(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/case\\-studies/microservices\\-reporting\\-platform(?:/)?$"
    },
    {
      "page": "/case-studies/openlm",
      "regex": "^/case\\-studies/openlm(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/case\\-studies/openlm(?:/)?$"
    },
    {
      "page": "/case-studies/tata-steel",
      "regex": "^/case\\-studies/tata\\-steel(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/case\\-studies/tata\\-steel(?:/)?$"
    },
    {
      "page": "/case-studies/tata-steel-digital-engineering",
      "regex": "^/case\\-studies/tata\\-steel\\-digital\\-engineering(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/case\\-studies/tata\\-steel\\-digital\\-engineering(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/countries",
      "regex": "^/countries(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/countries(?:/)?$"
    },
    {
      "page": "/experience",
      "regex": "^/experience(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/experience(?:/)?$"
    },
    {
      "page": "/platforms-built",
      "regex": "^/platforms\\-built(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/platforms\\-built(?:/)?$"
    },
    {
      "page": "/publications",
      "regex": "^/publications(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/publications(?:/)?$"
    },
    {
      "page": "/talks",
      "regex": "^/talks(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/talks(?:/)?$"
    },
    {
      "page": "/teams-led",
      "regex": "^/teams\\-led(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/teams\\-led(?:/)?$"
    },
    {
      "page": "/transformations",
      "regex": "^/transformations(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/transformations(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}